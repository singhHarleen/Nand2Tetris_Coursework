// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=reg1, b=reg2, c=reg3, d=reg4, e=reg5, f=reg6, g=reg7, h=reg8);

    Register(in=in, load=reg1, out=reg1Out);
    Register(in=in, load=reg2, out=reg2Out);
    Register(in=in, load=reg3, out=reg3Out);
    Register(in=in, load=reg4, out=reg4Out);
    Register(in=in, load=reg5, out=reg5Out);
    Register(in=in, load=reg6, out=reg6Out);
    Register(in=in, load=reg7, out=reg7Out);    
    Register(in=in, load=reg8, out=reg8Out);

    Mux8Way16(a=reg1Out, b=reg2Out, c=reg3Out, d=reg4Out, e=reg5Out, f=reg6Out, g=reg7Out, h=reg8Out, sel=address, out=out);
    
    // Put your code here:
}