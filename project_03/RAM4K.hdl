// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel=address[0..2], a=dMux8Out1, b=dMux8Out2, c=dMux8Out3, d=dMux8Out4, e=dMux8Out5, f=dMux8Out6, g=dMux8Out7, h=dMux8Out8);
    
    RAM512(in=in, load=dMux8Out1, address=address[3..11], out=ram512Out1);
    RAM512(in=in, load=dMux8Out2, address=address[3..11], out=ram512Out2);
    RAM512(in=in, load=dMux8Out3, address=address[3..11], out=ram512Out3);
    RAM512(in=in, load=dMux8Out4, address=address[3..11], out=ram512Out4);
    RAM512(in=in, load=dMux8Out5, address=address[3..11], out=ram512Out5);
    RAM512(in=in, load=dMux8Out6, address=address[3..11], out=ram512Out6);
    RAM512(in=in, load=dMux8Out7, address=address[3..11], out=ram512Out7);
    RAM512(in=in, load=dMux8Out8, address=address[3..11], out=ram512Out8);

    Mux8Way16(a=ram512Out1, b=ram512Out2, c=ram512Out3, d=ram512Out4, e=ram512Out5, f=ram512Out6, g=ram512Out7, h=ram512Out8, sel=address[0..2], out=out);
}